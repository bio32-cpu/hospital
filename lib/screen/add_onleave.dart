import 'package:flutter/material.dart';
import '../services/api_service.dart';
import '../models/leave.dart';

class AddOnLeaveScreen extends StatefulWidget {
  const AddOnLeaveScreen({Key? key}) : super(key: key);

  @override
  AddOnLeaveScreenState createState() => AddOnLeaveScreenState();
}

class AddOnLeaveScreenState extends State<AddOnLeaveScreen> {
  final TextEditingController _idPersonController = TextEditingController();
  DateTime _startDate = DateTime.now();
  DateTime? _endDate;

  bool _isLoading = false;

  Future<void> _addLeave() async {
    setState(() {
      _isLoading = true;
    });

    Leave newLeave = Leave(
      id: 0, // ID will be auto-generated by the database
      idPerson: _idPersonController.text,
      startDate: _startDate,
      endDate: _endDate,
    );

    bool success = await ApiService().addLeave(newLeave);

    setState(() {
      _isLoading = false;
    });

    if (success) {
      Navigator.pop(context, true);
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Thêm nghỉ phép thất bại')),
      );
    }
  }

  Future<void> _selectDate(BuildContext context, bool isStartDate) async {
    final DateTime? picked = await showDatePicker(
      context: context,
      initialDate: isStartDate ? _startDate : (_endDate ?? DateTime.now()),
      firstDate: DateTime(2000),
      lastDate: DateTime(2101),
    );
    if (picked != null) {
      setState(() {
        if (isStartDate) {
          _startDate = picked;
        } else {
          _endDate = picked;
        }
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Thêm nghỉ phép"),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: ListView(
          children: [
            TextField(
              controller: _idPersonController,
              decoration: const InputDecoration(labelText: "ID Nhân viên"),
            ),
            ListTile(
              title: const Text("Ngày bắt đầu"),
              subtitle: Text(_startDate.toLocal().toString().split(' ')[0]),
              trailing: IconButton(
                icon: const Icon(Icons.calendar_today),
                onPressed: () => _selectDate(context, true),
              ),
            ),
            ListTile(
              title: const Text("Ngày kết thúc"),
              subtitle: Text(_endDate != null ? _endDate!.toLocal().toString().split(' ')[0] : 'Chưa chọn'),
              trailing: IconButton(
                icon: const Icon(Icons.calendar_today),
                onPressed: () => _selectDate(context, false),
              ),
            ),
            const SizedBox(height: 20),
            _isLoading
                ? const Center(child: CircularProgressIndicator())
                : ElevatedButton(
                    onPressed: _addLeave,
                    child: const Text("Thêm nghỉ phép"),
                  ),
          ],
        ),
      ),
    );
  }
}
